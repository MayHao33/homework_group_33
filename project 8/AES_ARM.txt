.section .text
.global aes_encrypt

aes_encrypt:
    sub sp, sp, #32             // Allocate space on the stack
    
    stp x29, x30, [sp, #16]     // Save the link register and frame pointer
    mov x29, sp
    
    sub sp, sp, #16             // Allocate space for temporary registers
    
    ldr x4, =key                // Load the key
    ldr x5, =state              // Load the input state
    ldr x6, =round_keys         // Load the round keys
    
    ldr q0, [x4]                // Load key into q0
    ldr q1, [x5]                // Load state into q1
    
    mov x7, #1                  // Loop counter
    
aes_rounds:
    aesmc v1.16b, v1.16b        // Apply the AES MixColumns operation
    
    ldr x4, [x6, x7, lsl #4]    // Load round key
    aesd v1.16b, v1.16b, v4.16b  // Apply the AES round key
    
    add x7, x7, #1              // Increment the loop counter
    cmp x7, #10                 // Compare with the number of rounds
    blt aes_rounds
    
    aesmc v1.16b, v1.16b        // Apply the AES MixColumns operation
    
    ldr x4, [x6, #160]          // Load final round key
    aesd v1.16b, v1.16b, v4.16b  // Apply the final round key
    
    str q1, [x5]                // Store the encrypted state
    
    ldp x29, x30, [sp, #16]     // Restore the link register and frame pointer
    add sp, sp, #32             // Deallocate stack space
    
    ret


.section .data

key: .byte 0x2b, 0x7e, 0x15, 0x16, 0x28, 0xae, 0xd2, 0xa6, 0xab, 0xf7, 0x15, 0x88, 0x09, 0xcf, 0x4f, 0x3c
state: .byte 0x32, 0x43, 0xf6, 0xa8, 0x88, 0x5a, 0x30, 0x8d, 0x31, 0x31, 0x98, 0xa2, 0xe0, 0x37, 0x07, 0x34
round_keys: 
.byte 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f,
            
.byte 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f,
            
.byte 0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f,
            
.byte 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f,
            
.byte 0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f,
            
.byte 0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f,
            
.byte 0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f,
            
.byte 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7a, 0x7b, 0x7c, 0x7d, 0x7e, 0x7f
